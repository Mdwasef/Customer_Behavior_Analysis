use customer_behavior;
show tables;

select * from people limit 3 ;

-- Q1. What is the total revenue generated by male vs. female customers?

select gender, sum(purchase_amount) from people
group by gender;


-- Q2. Which customers used a discount but still spent more than the average purchase amount?

select customer_id, purchase_amount from people
where discount_applied="Yes" and purchase_amount >
 (select avg(purchase_amount) from people);


-- Q3. Which are the top 5 products with the highest average review rating?

select item_purchased , round(avg(review_rating),2) as average_rating from people
group by item_purchased
order by avg(review_rating) desc 
limit 5 ;

-- Q4. Compare the average Purchase Amounts between Standard and Express Shipping.

select shipping_type, round(avg(purchase_amount),2) from people
where shipping_type in ("Standard" , "Express")
group by shipping_type;

-- Q5. Do subscribed customers spend more? Compare average spend and total revenue between subscribers and non-subscribers.

-- subscription_status

select subscription_status, count(customer_id) as total_customer, round(avg(purchase_amount),2) as average_spend, sum(purchase_amount)as total_revenue from people
-- where subscription_status="Yes"
group by subscription_status;

-- Q6. Which 5 products have the highest percentage of purchases with discounts applied?

select item_purchased ,
round(sum(case
 when discount_applied="Yes" Then 1 
 else 0 
 end)*100/count(*),2)  as purchased_count
from people
group by item_purchased
order by purchased_count desc
limit 5
;


-- Q7. Segment customers into new, returning, and loyal based on their
-- total number of previous purchases , and count of each segment.

select 
(
CASE WHEN previous_purchases between 0 and 1 then "Loyal"
WHEN previous_purchases between 2 and 20 then "Returning"

ELSE "new" 
END
) as Customer_Segment,
count(*) as Segement_count
from people
group by Customer_Segment
order by Segement_count
;

-- Q8. top 3 purchase products within each category

SELECT category, item_purchased, total_count
FROM (
    SELECT 
        category,
        item_purchased,
        COUNT(*) AS total_count,
        ROW_NUMBER() OVER (PARTITION BY category ORDER BY COUNT(*) DESC) AS rankk
    FROM people
    GROUP BY category, item_purchased
) AS temp
WHERE rankk <= 3;

-- Q9. Are customers who are repeat buyers (more tan 5 previous purchases)
-- also likey to subscribe

select subscription_status, count(customer_id) as repeat_buyers from people
where previous_purchases>5
group by subscription_status
;

-- revenue contribution to each age group

select age_group, sum(purchase_amount) as total_revenue from people 
group by age_group
order by total_revenue desc
;
